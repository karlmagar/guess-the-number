{"version":3,"sources":["App.js","index.js"],"names":["computer_number","Math","floor","random","console","log","App","useState","number_of_guesses","setNumberOfGuesses","userHasWon","setUserHasWon","advice","setadvice","userGuess","setUserGuess","checkAns","prevVal","document","querySelector","value","className","id","onKeyDown","e","code","type","placeholder","onChange","target","isNaN","min","onClick","window","location","reload","ReactDOM","render","StrictMode","getElementById"],"mappings":"sKAEMA,EAAkBC,KAAKC,MAAsB,IAAhBD,KAAKE,UACxCC,QAAQC,IAAIL,GAwDGM,MAtDf,WACE,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAUA,SAASC,IACHF,EAAYd,GACda,EAAU,SACVJ,GAAmB,SAAAQ,GAAO,OAAIA,EAAQ,MAE/BH,EAAYd,GACnBa,EAAU,UACVJ,GAAmB,SAAAQ,GAAO,OAAIA,EAAQ,MAEnCN,GAAc,GACnBO,SAASC,cAAc,UAAUC,MAAQ,GAW3C,OACE,+BACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,MAAf,SACE,mDAGDX,GAAc,6CACQ,IAAtBF,GAA2B,4EAA+CR,EAA/C,QACzBU,GAAoC,IAAtBF,GAA4B,qCAAE,gGAAsE,0CAAY,uCAAUA,EAAV,OAAZ,IAA0E,IAAtBA,EAA0B,UAAY,QAA1F,WAAxE,IAAoL,6BAAKI,IACtO,uBAAOU,GAAG,QAAQC,UAlBxB,SAAsBC,GACT,UAAXA,EAAEC,MAAoBT,KAiByBU,KAAK,SAASC,YAAY,qBAAqBC,SAtChG,SAAmBJ,GACM,KAAnBA,EAAEK,OAAOT,OAAgBU,MAAMN,EAAEK,OAAOT,QAC5CL,GAAa,SAAAE,GAAO,OAAIO,EAAEK,OAAOT,UAoCkFW,IAAI,MACnH,wBAAQC,QAAShB,EAAjB,wBAEGN,GAAoC,IAAtBF,IAA4B,wBAAQwB,QAjB3D,WACEC,OAAOC,SAASC,UAgBiC,8BCjDrDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,W","file":"static/js/main.a142134d.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nconst computer_number = Math.floor(Math.random() * 1000);\nconsole.log(computer_number)\n\nfunction App() {\n  const [number_of_guesses, setNumberOfGuesses] = useState(10);\n  const [userHasWon, setUserHasWon] = useState(false);\n  const [advice, setadvice] = useState(\"\");\n  const [userGuess, setUserGuess] = useState(0);\n  \n\n  function getAnswer(e) {\n    if (e.target.value === \"\" || isNaN(e.target.value)) return;\n    setUserGuess(prevVal => e.target.value);\n  }\n  \n  \n  \n  function checkAns() {\n    if (userGuess > computer_number)  {\n      setadvice(\"Lower\");\n      setNumberOfGuesses(prevVal => prevVal-1);\n    }\n    else if (userGuess < computer_number) {\n      setadvice(\"Higher\");\n      setNumberOfGuesses(prevVal => prevVal-1);\n    } \n    else setUserHasWon(true)\n    document.querySelector(\"#guess\").value = \"\"\n  }\n\n  function triggerEnter(e) {\n    e.code === \"Enter\" && checkAns()\n  }\n\n  function playAgain() {\n    window.location.reload();\n  }\n\n  return (\n    <main>\n      <div className=\"card\">\n        <div className=\"top\">\n          <p>Guess the number</p>\n        </div>\n        \n        {userHasWon && <p>You have won</p>}\n        {number_of_guesses === 0 && <p>You're out of guesses ! Correct Answer was {computer_number} </p>}\n        {(!userHasWon && number_of_guesses !== 0) && <><p>I'm thinking of a number between 0 and 1000, can you guess it ?</p><p>You have <strong> {number_of_guesses} </strong> {number_of_guesses !== 1 ? \"guesses\" : \"guess\"} left</p> <h3>{advice}</h3> \n        <input id=\"guess\" onKeyDown={triggerEnter} type=\"number\" placeholder=\"Your guess here...\" onChange={getAnswer} min=\"0\" />\n        <button onClick={checkAns}>Submit</button></>\n         }\n         {(userHasWon || number_of_guesses === 0) && <button onClick={playAgain}>Play Again</button>}\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}